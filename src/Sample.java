/*
com.interview.leetcode.topic.

===========================================================Requirement===========================================================
=========================================================Initial Thought=========================================================
=================================================Initial Thought - Wrong Approach================================================
=================================================Initial Thought - Right Approach================================================
===========================================================BruteForce============================================================
============================================================Example1=============================================================
=========================================================InvalidExample==========================================================
========================================================Solution Approach========================================================
=================================================Solution Approach - Not Optimal=================================================
=======================================================Data Flow Analysis========================================================
========================================================Logical Thinking=========================================================
=========================================================Time Complexity=========================================================
========================================================Space Complexity=========================================================
===========================================================Corner Case===========================================================
==========================================================Deep Thinking==========================================================
=================================================================================================================================
=========================================================Layman's terms==========================================================
 */
public class Sample {

  public int longestValidParentheses(String s) {
    if (s.length() == 0) return 0;

    int leftToRightMax = getMax(s);
    int rightToLeftMax = getMax(new StringBuilder(s).reverse().toString());

    return Math.max(leftToRightMax, rightToLeftMax);



  }

  private int getMax(String s) {
    int sum = 0, max = 0, currMax = 0;

    for (Character c : s.toCharArray()) {
      if (c == '(') sum++;
      else sum--;

      if (sum < 0) {
        sum = 0;
        currMax = 0;
      } else {
        currMax++;
        if (sum == 0) max = Math.max(max, currMax);// Only when balanced calculate max.
      }
    }

    return currMax;
  }
}
